name: setLastUpdatedOn
on:
  schedule:
    - cron: "0 */4 * * *" # Cron Every Hour
  workflow_dispatch:

jobs:
  set-date: #job name
    runs-on: ubuntu-latest #cointainer
    steps:
      - uses: actions/checkout@v2

      - name: setting Template File
        uses: actions/setup-node@v1
        with:
          node-version: 14.6.0 #Node version

      - run: node .  # Runs only index.js file

      - name: Add to git repo # Commits the changes to the repo
        run: |
          git config pull.rebase false
          git pull
          git add .
          git config --global user.name "ranjeetrocky"
          git config --global user.email "ranjeetrocky2000@gmail.com"
          git commit -m "[Automated] README updated!"
          
      - name: Push # Push the commits
        uses: ad-m/github-push-action@master  #pushes to the master or main branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
## This is a basic workflow to help you get started with Actions
#
#name: CI
#
## Controls when the workflow will run
#on:
#  # Triggers the workflow on push or pull request events but only for the main branch
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
